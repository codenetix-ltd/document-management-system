kind: ConfigMap
apiVersion: v1
metadata:
  name: dms-configuration
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dms-backend
  name: dms-backend-deployment
spec:
  selector:
    matchLabels:
      app: dms-backend
  template:
    metadata:
      labels:
        app: dms-backend
    spec:
      containers:
      - image: codenetix/laravel-dms-backend:dev
        envFrom:
        - configMapRef:
            name: dms-configuration
            optional: false
        imagePullPolicy: Always
        name: dms-backend
        volumeMounts:
        - mountPath: "/var/www/storage"
          name: stor0-nfs-dms
          subPath: "storage"
      volumes:
      - name: stor0-nfs-dms
        persistentVolumeClaim:
          claimName: stor0-nfs-dms
      imagePullSecrets:
      - name: registry-dockerhub
      restartPolicy: Always
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dms-frontend
  name: dms-frontend-deployment
spec:
  selector:
    matchLabels:
      app: dms-frontend
  template:
    metadata:
      labels:
        app: dms-frontend
    spec:
      containers:
      - image: codenetix/laravel-dms-frontend:dev
        imagePullPolicy: Always
        name: dms-frontend
      imagePullSecrets:
      - name: registry-dockerhub
      restartPolicy: Always
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dms-documentation
  name: dms-documentation-deployment
spec:
  selector:
    matchLabels:
      app: dms-documentation
  template:
    metadata:
      labels:
        app: dms-documentation
    spec:
      containers:
      - image: codenetix/laravel-dms-documentation:master
        imagePullPolicy: Always
        name: dms-documentation
      imagePullSecrets:
      - name: registry-dockerhub
      restartPolicy: Always
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dms-mock
  name: dms-mock-deployment
spec:
  selector:
    matchLabels:
      app: dms-mock
  template:
    metadata:
      labels:
        app: dms-mock
    spec:
      containers:
      - image: codenetix/laravel-dms-mock:master
        imagePullPolicy: Always
        name: dms-mock
      imagePullSecrets:
      - name: registry-dockerhub
      restartPolicy: Always
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dms-proxy
  name: dms-proxy-deployment
spec:
  selector:
    matchLabels:
      app: dms-proxy
  template:
    metadata:
      labels:
        app: dms-proxy
    spec:
      containers:
      - image: codenetix/laravel-dms-proxy:master
        imagePullPolicy: Always
        name: dms-proxy
      imagePullSecrets:
      - name: registry-dockerhub
      restartPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: backend-app
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: dms-backend
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-app
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: dms-frontend
---

apiVersion: v1
kind: Service
metadata:
  name: documentation
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: dms-documentation
---


apiVersion: v1
kind: Service
metadata:
  name: mock
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: dms-mock
---

apiVersion: v1
kind: Service
metadata:
  name: proxy-app
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: dms-proxy
---